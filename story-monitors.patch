diff --git a/StoryActivity.py b/StoryActivity.py
index 16791f9..45c0c35 100644
--- a/StoryActivity.py
+++ b/StoryActivity.py
@@ -45,6 +45,7 @@ from gettext import gettext as _
 
 from game import Game
 
+from sugarapp.helpers import PrimaryMonitor
 from sugarapp.widgets import DesktopSaveChooser
 from sugarapp.widgets import SugarCompatibleActivity
 
@@ -97,20 +98,20 @@ class StoryActivity(SugarCompatibleActivity):
         self.set_canvas(self._fixed)
 
         self._vbox = Gtk.VBox(False, 0)
-        self._vbox.set_size_request(Gdk.Screen.width(), Gdk.Screen.height())
+        self._vbox.set_size_request(PrimaryMonitor.width(), PrimaryMonitor.height())
 
         self._fixed.put(self._vbox, 0, 0)
         self._vbox.show()
 
         self._canvas = Gtk.DrawingArea()
-        self._canvas.set_size_request(int(Gdk.Screen.width()),
-                                      int(Gdk.Screen.height()))
+        self._canvas.set_size_request(int(PrimaryMonitor.width()),
+                                      int(PrimaryMonitor.height()))
         self._canvas.show()
 
         self._vbox.pack_end(self._canvas, True, True, 0)
         self._vbox.show()
 
-        entry_width = Gdk.Screen.width() - 7 * style.GRID_CELL_SIZE - \
+        entry_width = PrimaryMonitor.width() - 7 * style.GRID_CELL_SIZE - \
             2 * style.DEFAULT_SPACING
         entry_height = 3 * style.GRID_CELL_SIZE - 2 * style.DEFAULT_SPACING
         self._entry = Gtk.TextView()
@@ -131,7 +132,7 @@ class StoryActivity(SugarCompatibleActivity):
         self._scrolled_window = Gtk.ScrolledWindow()
         self._scrolled_window.set_shadow_type(Gtk.ShadowType.ETCHED_IN)
         self._scrolled_window.set_size_request(
-            Gdk.Screen.width() - 6 * style.GRID_CELL_SIZE,
+            PrimaryMonitor.width() - 6 * style.GRID_CELL_SIZE,
             style.GRID_CELL_SIZE * 3)
         self._scrolled_window.set_policy(
             Gtk.PolicyType.NEVER, Gtk.PolicyType.AUTOMATIC)
@@ -147,7 +148,7 @@ class StoryActivity(SugarCompatibleActivity):
                             style.DEFAULT_SPACING)
         else:
             self._fixed.put(self._scrolled_window, 3 * style.GRID_CELL_SIZE,
-                            Gdk.Screen.height() - style.DEFAULT_SPACING -
+                            PrimaryMonitor.height() - style.DEFAULT_SPACING -
                             style.GRID_CELL_SIZE * 4)
         self._scrolled_window.show()
         self._fixed.show()
@@ -184,21 +185,21 @@ class StoryActivity(SugarCompatibleActivity):
         SugarCompatibleActivity.close(self, **kwargs)
 
     def _configure_cb(self, event):
-        self._canvas.set_size_request(int(Gdk.Screen.width()),
-                                      int(Gdk.Screen.height()))
-        self._vbox.set_size_request(Gdk.Screen.width(), Gdk.Screen.height())
-        entry_width = Gdk.Screen.width() - 7 * style.GRID_CELL_SIZE - \
+        self._canvas.set_size_request(int(PrimaryMonitor.width()),
+                                      int(PrimaryMonitor.height()))
+        self._vbox.set_size_request(PrimaryMonitor.width(), PrimaryMonitor.height())
+        entry_width = PrimaryMonitor.width() - 7 * style.GRID_CELL_SIZE - \
             2 * style.DEFAULT_SPACING
         entry_height = 3 * style.GRID_CELL_SIZE - 2 * style.DEFAULT_SPACING
         self._entry.set_size_request(entry_width, entry_height)
         self._scrolled_window.set_size_request(
-            Gdk.Screen.width() - 6 * style.GRID_CELL_SIZE,
+            PrimaryMonitor.width() - 6 * style.GRID_CELL_SIZE,
             style.GRID_CELL_SIZE * 3)
 
         if not self.tablet_mode:
             self._fixed.move(
                 self._scrolled_window, 3 * style.GRID_CELL_SIZE,
-                Gdk.Screen.height() - style.DEFAULT_SPACING -
+                PrimaryMonitor.height() - style.DEFAULT_SPACING -
                 style.GRID_CELL_SIZE * 4)
 
         self._game.configure()
diff --git a/game.py b/game.py
index 84d19db..3566ddf 100644
--- a/game.py
+++ b/game.py
@@ -37,6 +37,9 @@ except ImportError:
 from sprites import Sprites, Sprite
 from utils import speak
 
+from sugarapp.helpers import PrimaryMonitor
+
+
 PREV = 0
 NEXT = 1
 PREV_INACTIVE = 2
@@ -95,8 +98,8 @@ class Game():
         # Generate the sprites we'll need...
         self._sprites = Sprites(self._canvas)
 
-        a = max(Gdk.Screen.width(), Gdk.Screen.height())
-        b = min(Gdk.Screen.width(), Gdk.Screen.height())
+        a = max(PrimaryMonitor.width(), PrimaryMonitor.height())
+        b = min(PrimaryMonitor.width(), PrimaryMonitor.height())
         self._bg_pixbufs = []
         if self._parent.tablet_mode:  # text on top
             # landscape
@@ -129,7 +132,7 @@ class Game():
                 b - 3 * style.GRID_CELL_SIZE,
                 a - style.GRID_CELL_SIZE - style.DEFAULT_SPACING)))
 
-        if Gdk.Screen.width() > Gdk.Screen.height():
+        if PrimaryMonitor.width() > PrimaryMonitor.height():
             self._bg = Sprite(self._sprites, 0, 0, self._bg_pixbufs[0])
         else:
             self._bg = Sprite(self._sprites, 0, 0, self._bg_pixbufs[1])
@@ -137,10 +140,10 @@ class Game():
         self._bg.type = 'background'
 
         size = 3 * self._dot_size + 4 * self._space
-        x = int((Gdk.Screen.width() - size) / 2.)
+        x = int((PrimaryMonitor.width() - size) / 2.)
         self._dots = []
         self._Dots = []  # larger dots for linear mode
-        X = int((Gdk.Screen.width() - self._dot_size * 3) / 2.)
+        X = int((PrimaryMonitor.width() - self._dot_size * 3) / 2.)
         Y = style.GRID_CELL_SIZE + self._yoff
         if self._parent.tablet_mode:
             yoffset = self._space * 2 + self._yoff
@@ -195,17 +198,17 @@ class Game():
                     style.GRID_CELL_SIZE, style.GRID_CELL_SIZE))
 
         left = style.GRID_CELL_SIZE
-        right = Gdk.Screen.width() - 2 * style.GRID_CELL_SIZE
+        right = PrimaryMonitor.width() - 2 * style.GRID_CELL_SIZE
         y0 = style.DEFAULT_SPACING + style.DEFAULT_PADDING
         y1 = y0 + style.GRID_CELL_SIZE
         y2 = y1 + style.GRID_CELL_SIZE
         if not self._parent.tablet_mode:
-            dy = Gdk.Screen.height() - 4 * style.GRID_CELL_SIZE - \
+            dy = PrimaryMonitor.height() - 4 * style.GRID_CELL_SIZE - \
                 2 * style.DEFAULT_SPACING
             y0 += dy
             y1 += dy
             y2 += dy
-        y3 = int((Gdk.Screen.height() - 2 * style.GRID_CELL_SIZE) / 2)
+        y3 = int((PrimaryMonitor.height() - 2 * style.GRID_CELL_SIZE) / 2)
 
         self._record = Sprite(
             self._sprites, right, y0, self._record_pixbufs[RECORD_OFF])
@@ -245,8 +248,8 @@ class Game():
             self._next.hide()
 
     def configure(self, move=True):
-        self._width = Gdk.Screen.width()
-        self._height = Gdk.Screen.height() - style.GRID_CELL_SIZE
+        self._width = PrimaryMonitor.width()
+        self._height = PrimaryMonitor.height() - style.GRID_CELL_SIZE
         if not move:
             if self._height < self._width:
                 self._scale = self._height / (3 * DOT_SIZE * 1.2)
@@ -262,17 +265,17 @@ class Game():
             return
 
         left = style.GRID_CELL_SIZE
-        right = Gdk.Screen.width() - 2 * style.GRID_CELL_SIZE
+        right = PrimaryMonitor.width() - 2 * style.GRID_CELL_SIZE
         y0 = style.DEFAULT_SPACING + style.DEFAULT_PADDING
         y1 = y0 + style.GRID_CELL_SIZE
         y2 = y1 + style.GRID_CELL_SIZE
         if not self._parent.tablet_mode:
-            dy = Gdk.Screen.height() - 4 * style.GRID_CELL_SIZE - \
+            dy = PrimaryMonitor.height() - 4 * style.GRID_CELL_SIZE - \
                 2 * style.DEFAULT_SPACING
             y0 += dy
             y1 += dy
             y2 += dy
-        y3 = int((Gdk.Screen.height() - 2 * style.GRID_CELL_SIZE) / 2)
+        y3 = int((PrimaryMonitor.height() - 2 * style.GRID_CELL_SIZE) / 2)
         self._record.move((right, y0))
         self._play.move((right, y1))
         self._speak.move((right, y2))
@@ -280,7 +283,7 @@ class Game():
         self._next.move((right, y3))
 
         # Move the dots
-        X = int((Gdk.Screen.width() - self._dot_size * 3) / 2.)
+        X = int((PrimaryMonitor.width() - self._dot_size * 3) / 2.)
         Y = style.GRID_CELL_SIZE + self._yoff
         if self._parent.tablet_mode:
             yoffset = self._space * 2 + self._yoff
@@ -296,7 +299,7 @@ class Game():
                 self._Dots[x + y * 3].move((X, Y))
 
         # switch orientation the bg sprite
-        if Gdk.Screen.width() > Gdk.Screen.height():
+        if PrimaryMonitor.width() > PrimaryMonitor.height():
             self._bg.set_image(self._bg_pixbufs[0])
         else:
             self._bg.set_image(self._bg_pixbufs[1])

